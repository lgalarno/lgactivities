"""
Django local for lgactivities project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of local and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
from dotenv import dotenv_values

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
config = dotenv_values(BASE_DIR / '.env')

# # SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config["DJANGO_SECRET_KEY"]
#
# # SECURITY WARNING: don't run with debug turned on in production!
DEBUG = str(config["DEBUG"]) == "1"  # 1 == True

#
ALLOWED_HOSTS = config["ALLOWED_HOSTS"].split(',') if config["ALLOWED_HOSTS"] else []

######################################################################
# Application definition
######################################################################
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.sites',
    'django.contrib.sitemaps',
    'django.contrib.staticfiles',
    # third party
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.strava',
    'crispy_forms',
    "crispy_bootstrap5",
    'django_celery_beat',
    'django_celery_results',
    'django_filters',
    'rest_framework',
    # custom app
    'activities',
    'calendarapp',
    'profiles',
    'getactivities',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'lgactivities.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR /'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'lgactivities.wsgi.application'

######################################################################
# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators
######################################################################
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

######################################################################
# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/
######################################################################
LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

######################################################################
# django-allauth
######################################################################
AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',
    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
]

SITE_ID = 1

# Provider specific local
ACCOUNT_AUTHENTICATION_METHOD = 'email'
# ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False
# ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = True
ACCOUNT_SESSION_REMEMBER = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_EMAIL_VERIFICATION = 'none'
# ACCOUNT_ADAPTER = 'profiles.account_adapter.AccountAdapter'
# SOCIALACCOUNT_ADAPTER = 'allauth.socialaccount.adapter.DefaultSocialAccountAdapter'
SOCIALACCOUNT_STORE_TOKENS = True
SOCIALACCOUNT_AUTO_SIGNUP = True
SOCIALACCOUNT_PROVIDERS = {'strava': {
    'AUTH_PARAMS': {
        'SCOPE': [
            'read',
            'activity:read_all'
        ],
        'access_type': 'offline',
        }
    }
}

######################################################################
# CUSTOM USER
######################################################################
AUTH_USER_MODEL = "profiles.User"

######################################################################
# LOGIN/LOGOUT REDIRECT
######################################################################
LOGOUT_REDIRECT_URL = '/'
LOGIN_REDIRECT_URL = '/calendar/'
LOGIN_URL = '/'

######################################################################
# CRISPY_FORMS
######################################################################
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"
# use_custom_control = True

######################################################################
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/
######################################################################
STATIC_URL = '/static/'
MEDIA_URL = '/media/'
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

STATIC_ROOT = config.get('STATIC_ROOT')
MEDIA_ROOT = config.get('MEDIA_ROOT', BASE_DIR / '..' / "media")

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ]
}

######################################################################
# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases
######################################################################
DATABASES = {
    'default': {
        'ENGINE': config.get('DATABASE_ENGINE'),
        'HOST': config.get('DATABASE_HOST'),
        'PORT': config.get('DATABASE_PORT'),
        'USER': config.get('DATABASE_USER'),
        'PASSWORD': config.get('DATABASE_PASSWORD'),
        'NAME': config.get('DATABASE_NAME'),
        'OPTIONS': {
            'charset': 'utf8mb4',
            'use_unicode': True, },
    },
}

######################################################################
# STRAVA_API
######################################################################
STRAVA_API = {
    'name':  config["STRAVA_API_NAME"],  # os.getenv('STRAVA_API_NAME'),
    'callback_domain': config["STRAVA_callback_domain"],  # environ.get('STRAVA_callback_domain'),
    'URLS': {
        'oauth': "https://www.strava.com/oauth/",
        'athlete': "https://www.strava.com/api/v3/",
    }
}

FROM_EMAIL = config["FROM_EMAIL"]  # os.environ.get('FROM_EMAIL')
EMAIL_PASSWORD = config["EMAIL_PASSWORD"]  # os.environ.get('EMAIL_PASSWORD')
STRAVA_CLIENT_ID = config["STRAVA_CLIENT_ID"]  # os.environ.get('STRAVA_CLIENT_ID')
STRAVA_CLIENT_SECRET = config["STRAVA_CLIENT_SECRET"]  #os.environ.get('STRAVA_CLIENT_SECRET')

######################################################################
# CELERY
######################################################################
CELERY_BROKER_URL = config["REDIS_URL"]   # os.environ.get('REDIS_URL')
CELERY_RESULT_BACKEND = "django-db"
# CELERY_WORKER_POOL = "solo"
CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers.DatabaseScheduler'

######################################################################
# Other security
######################################################################
SECURE_REFERRER_POLICY = "strict-origin-when-cross-origin"


######################################################################
# CACHES
######################################################################
# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.memcached.PyMemcacheCache',
#         'LOCATION': '127.0.0.1:11211',
#     }
# }
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": config["REDIS_URL"],  # os.environ.get('REDIS_URL'),
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}
